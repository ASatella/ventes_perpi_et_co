/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ppe3.ventes_perpi_co;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author A.A
 */
public class Authentification extends javax.swing.JFrame {

    /**
     * Creates new form Authentification
     */
    public Authentification() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitre = new javax.swing.JLabel();
        jLabelUtilisateur = new javax.swing.JLabel();
        jTextFieldUtilisateur = new javax.swing.JTextField();
        jLabelMDP = new javax.swing.JLabel();
        jPasswordFieldMDP = new javax.swing.JPasswordField();
        jButtonConnexion = new javax.swing.JButton();
        jLabelEtat = new javax.swing.JLabel();
        jButtonQuitter = new javax.swing.JButton();
        jLabelUtilisateurSgdb = new javax.swing.JLabel();
        jTextFieldUtilisateurSgbd = new javax.swing.JTextField();
        jPasswordFieldMDPSgbd = new javax.swing.JPasswordField();
        jLabelMDPSgdb = new javax.swing.JLabel();
        jTextFieldNomBdd = new javax.swing.JTextField();
        jLabelNomBdd = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldIpServeur = new javax.swing.JTextField();
        jLabelIpServeur = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Perpi&Co");
        setResizable(false);

        jLabelTitre.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitre.setText("Perpi&Co - Authentification");
        jLabelTitre.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabelUtilisateur.setText("Nom d'utilisateur personnel");

        jTextFieldUtilisateur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUtilisateurActionPerformed(evt);
            }
        });

        jLabelMDP.setText("Mot de passe personnel");

        jButtonConnexion.setText("Se connecter");
        jButtonConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConnexionActionPerformed(evt);
            }
        });

        jLabelEtat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEtat.setText("Non connect√©");

        jButtonQuitter.setText("Quitter");
        jButtonQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitterActionPerformed(evt);
            }
        });

        jLabelUtilisateurSgdb.setText("Nom d'utilsateur SGBD");

        jLabelMDPSgdb.setText("Mot de passe SGBD");

        jLabelNomBdd.setText("Nom de la BDD");

        jLabelPort.setText("Port");

        jLabelIpServeur.setText("IP/Nom du serveur");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jButtonQuitter, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelEtat, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jButtonConnexion))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelUtilisateur)
                            .addComponent(jLabelMDPSgdb))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordFieldMDPSgbd, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldUtilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelIpServeur))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelPort))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMDP)
                            .addComponent(jLabelUtilisateurSgdb)
                            .addComponent(jLabelNomBdd))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldNomBdd, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldUtilisateurSgbd, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldIpServeur, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPasswordFieldMDP, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelIpServeur)
                    .addComponent(jTextFieldIpServeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPort)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomBdd)
                    .addComponent(jTextFieldNomBdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUtilisateurSgdb)
                    .addComponent(jTextFieldUtilisateurSgbd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordFieldMDPSgbd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMDPSgdb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUtilisateur)
                    .addComponent(jTextFieldUtilisateur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMDP)
                    .addComponent(jPasswordFieldMDP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelEtat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonQuitter)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConnexionActionPerformed
        String nomUser = jTextFieldUtilisateur.getText();
        String mdp = jPasswordFieldMDP.getText();

        try {
            DAO monDAO = DAO.getInstance();
            // V√©rifie si la connexion au SGBD est effectu√©e et v√©rifie si les champs du nom d'utilisateur et du mdp sont remplis
            if (monDAO != null) {
                if (!("".equals(jTextFieldIpServeur.getText()) && "".equals(jTextFieldPort.getText()) && "".equals(jTextFieldNomBdd.getText()) && "".equals(jTextFieldUtilisateurSgbd.getText()) && "".equals(jPasswordFieldMDPSgbd.getText())))
                {
                    DAO.setNomServeur(jTextFieldIpServeur.getText());
                    DAO.setNomBdd(jTextFieldPort.getText());
                    DAO.setPort(jTextFieldNomBdd.getText());
                    DAO.setNomUtilisateur(jTextFieldUtilisateurSgbd.getText());
                    DAO.setMotDePasse(jPasswordFieldMDPSgbd.getText());
                    if (!("".equals(nomUser) && "".equals(mdp))) {
                        ResultSet connexionPersonnel = monDAO.requeteSelection("SELECT nomuser, mdp FROM personnel WHERE nomuser='" + nomUser + "' AND mdp='" + mdp + "'");
                        // Parcours la table et si les informations rentr√©es dans les champs sont trouv√©es dans la BDD r√©cup√®re l'id du profil du personnel voulant se connecter
                        if (connexionPersonnel.next()) {
                            ResultSet requeteProfil = monDAO.requeteSelection("SELECT id_profil FROM personnel WHERE nomuser='" + nomUser + "' AND mdp='" + mdp + "'");
                            requeteProfil.next();
                            String profilPersonnel = requeteProfil.getString(1);
                            /* V√©rifie en fonction de l'id du profil si c'est un agent ou un admin qui essaye de se connecter
                            Utilise une m√©thode 'setIdPersonnel' pour pouvoir stocker l'id du personnel voulant se connecter */
                            if ("1".equals(profilPersonnel)) {
                                AccueilAgent accueilAgent = new AccueilAgent();
                                accueilAgent.setVisible(true);
                                ResultSet requeteIdPersonnel = monDAO.requeteSelection("SELECT id_personnel FROM personnel WHERE nomuser='" + nomUser + "' AND mdp='" + mdp + "'");
                                requeteIdPersonnel.next();
                                accueilAgent.setIdPersonnel(requeteIdPersonnel.getString(1));
                                Authentification.this.dispose();
                            } else {
                                AccueilAdmin accueilAdmin = new AccueilAdmin();
                                accueilAdmin.setVisible(true);
                                ResultSet requeteIdPersonnel = monDAO.requeteSelection("SELECT id_personnel FROM personnel WHERE nomuser='" + nomUser + "' AND mdp='" + mdp + "'");
                                requeteIdPersonnel.next();
                                accueilAdmin.setIdPersonnel(requeteIdPersonnel.getString(1));
                                Authentification.this.dispose();
                            }
                        } else {
                            jLabelEtat.setText("Veuillez v√©rifier les informations saisies");
                        }
                    } else {
                        jLabelEtat.setText("Veuillez remplir les champs");
                    }
                } else {
                    jLabelEtat.setText("Veuillez remplir tout les champs");
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(DAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonConnexionActionPerformed

    private void jButtonQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitterActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonQuitterActionPerformed

    private void jTextFieldUtilisateurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUtilisateurActionPerformed

    }//GEN-LAST:event_jTextFieldUtilisateurActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authentification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConnexion;
    private javax.swing.JButton jButtonQuitter;
    private javax.swing.JLabel jLabelEtat;
    private javax.swing.JLabel jLabelIpServeur;
    private javax.swing.JLabel jLabelMDP;
    private javax.swing.JLabel jLabelMDPSgdb;
    private javax.swing.JLabel jLabelNomBdd;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JLabel jLabelUtilisateur;
    private javax.swing.JLabel jLabelUtilisateurSgdb;
    private javax.swing.JPasswordField jPasswordFieldMDP;
    private javax.swing.JPasswordField jPasswordFieldMDPSgbd;
    private javax.swing.JTextField jTextFieldIpServeur;
    private javax.swing.JTextField jTextFieldNomBdd;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jTextFieldUtilisateur;
    private javax.swing.JTextField jTextFieldUtilisateurSgbd;
    // End of variables declaration//GEN-END:variables
}
